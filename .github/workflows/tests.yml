name: Run Tests ðŸ§ª


on: 
  push:
    branches:
      - main
      - develop
      - 'feature/**'
    paths:
      - 'Editor/**'
      - 'Runtime/**'
      - 'Samples~/**'
      - 'Tests/**'
  workflow_dispatch:

jobs:
  buildAndTestForSomePlatforms:
    name: Test on ${{ matrix.unityVersion }} for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        packageName:
          - Trinkets
        projectPath:
          - Trinkets
        unityVersion:
          - 2021.3.0f1
          - 2022.2.1f1
        targetPlatform:
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          # - StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - iOS # Build an iOS player.
          # - Android # Build an Android player.
          # - WebGL # WebGL.
    steps:
      - name: Create empty Unity project
        run: |
          mkdir -p ${{ matrix.projectPath }}/Assets
          mkdir -p ${{ matrix.projectPath }}/ProjectSettings 
          mkdir -p ${{ matrix.projectPath }}/Packages
      
      # Add and Configure Dependencies
      - name: Clone custom NSubstitute test dependency
        uses: GuillaumeFalourd/clone-github-repo-action@v2
        with:
          owner: 'MartonioJunior'
          repository: 'Unity3D-NSubstitute'

      - name: Move Repository to Packages
        run: |
          mv Unity3D-NSubstitute ${{ matrix.projectPath }}/Packages/
      
      - name: Check out to Packages/${{ matrix.packageName }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: ${{ matrix.projectPath }}/Packages/${{ matrix.packageName }}
          
      - name: Fetch from Cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}-
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'Test Results ${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}'
          coverageOptions: 'generateAdditionalMetrics;generateAdditionalReports;generateHtmlReport;generateBadgeReport;assemblyFilters:+com.martoniojunior.*'
      
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results (edit + play, ${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      
      - name: Upload XML report to Codecov
        uses: codecov/codecov-action@v2
        if: startsWith("2021.3", "${{ matrix.unityVersion }}")
        with:
          name: PlayMode
          flags: automated
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ steps.testRunner.outputs.artifactsPath }}/**/*.xml